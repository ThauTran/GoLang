Source: codecademy.com
Course: Learn Go
Year  : 2022

Guideline:
Toic	:Line_number
Basic	:13




---------------
1st line- package declaration: create an executable or library 
	$package main

2nd line- import statement: bring in and use code from other packages. Use " ". 
	$import "fmt" #importing the fmt package

* 	$go build main.go
	$./ main

* $go run main.go

*Functions:
	$func [name] (){
		fmt.Println("Hello World")}

*Importing multiple packages:
	More packages: https://pkg.go.dev/std
	$import (
		"package1"
		"package2"
	)#each package is seperated by LINE, not by any special characters.

	$import (
	p1 "package1") #p1 is an ALIAS.
	
*Comments
	$// This is a comment
	$/* This is a block comment */

*Go Resources: https://go.dev/
	$go doc [package_name]
	$go doc fmt.Println

*Values and Variables:
	1. Literals: numbers, strings, etc.
		- add (+), substract (-), multiply (*), divide (/), remainder (%)
			$fmt.Println(2*3) //6
	2. Constants: can't be UPDATED when the program is RUNNING
		- const
			$const funcFact = "1+1=2"
			$fmt.Println(funFact) 
	3. Data Type: THREE basic catagories for NUMBERS:
		- int
		- float
		- complex
	4. Basic Numeric Types in Go: 15 different numeric types
		- https://go.dev/ref/spec#Numeric_types
	
	5. Variables: Can change during the running of a program
		- var [prefered_name] [type]
		$var lengthOfSong uint16
	6. Reading Errors
		- Format: ./[package_name]:[line_number]:[column_number]
		- Example:./main.go:4:7: numberWheels declared and not used
	7. Assigning Variables:
		- Variables are placeholder names
		- updating variables is called ASSIGNING a value to variable
		- Use "=" to assign value to variable
		- Example: 
			$var kilometersToMars int32 //declaring to variable
			$kilometerToMars = 62100000 // assigning value to that variable
		- OR: $var kilometersToMars int32= = 61200000
*String: 
	- A signe quote ' cannot be used to define strings.
	$var myfavoriteFood string = "Pho"
	$fmt.Println("My favorite food is " + myfavoriteFood) \\My favorite food is Pho
	
*Zero Values:
	- All numeric var have a value of 0 BEFORE assignment
		$var emptyFloat float32 
		$fmt.Println(emptyFloat) \\0
	- String var have a default value of "" - empty string
	- Boolean var have a default value of FALSE

*Inferring Type:
	- := is used to create the var and infer its type based on the VALUE PROVIDE
		$workTomorrow := true \\boolean value assigned
	- There are two ways of inferring type:
		1.$friendName := "Trannnn"
		2.$var friendName = "Trannnn"
	- Checking type: fmt.Printf("Type is: %T", [variable]) 

*Default int Type:
	- int vs. uint (unsigned integer)

*Updating Variables:
	- +=: to add from the var
	- -+: to substract from the var
	- *=: to multiply the var by a factor
	- /= to divide the var by a dividend
	Example1
		$command := "Hold"
		$person := "me!"
		$command += person
		$fmt.Println (command) \\ Hold me!
		--------------
	Example 2:
		$coolSneakers := 65.99
		$niceNecklace := 45.50
		$var taxCalculation float64
		$taxCalculation += coolSneakers
		$taxCalculation += niceNecklace
		// Compute the NYC sales tax
		// 8.875% of the purchase here:
		$taxCalculation *= 0.08875
		$fmt.Println("Purchase of", coolSneakers + niceNecklace, "with 8.875% sales tax", taxCalculation, "equal to", coolSneakers + niceNecklace + taxCalculation)

* Multiple var Declaration:
	$var part1, part2 string \\both are strings
	$quote, fact := "The sun is bigger than the moon", true \\string, boolean

